{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","id","name","email","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","App","onSearchChange","event","setState","searchfield","target","value","state","fetch","then","response","json","users","filteredRobots","this","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAeeA,EAbH,SAACC,GACZ,OACC,sBAAKC,UAAW,iDAAhB,UACC,qBAAKC,IAAK,WAAWC,IAAG,+BAA0BH,EAAMI,GAAhC,UACvB,gCACC,mCAAMJ,EAAMK,QACZ,4BAAIL,EAAMM,eCcAC,EAlBA,SAAC,GAAY,IAAXC,EAAU,EAAVA,OAChB,OACC,8BAECA,EAAOC,KAAI,SAACC,EAAKC,GAEhB,OACE,cAAC,EAAD,CACAP,GAAII,EAAOG,GAAGP,GACdC,KAAOG,EAAOG,GAAGN,KACjBC,MAAQE,EAAOG,GAAGL,cCARM,EAXC,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,aAClB,OACC,qBAAKZ,UAAU,MAAf,SACC,uBAAOA,UAAU,mCACjBa,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCEEI,EATD,SAACjB,GACd,OACA,qBAAKkB,MAAQ,CAACC,UAAU,SAAUC,OAAQ,kBAAmBC,OAAO,SAApE,SACGrB,EAAMsB,YCsDKC,E,kDAjDd,aACC,IAAD,8BACC,gBAgBDC,eAAgB,SAACC,GAEhB,EAAKC,SAAS,CAACC,YAAYF,EAAMG,OAAOC,SAjBxC,EAAKC,MACL,CACCtB,OAAQ,GACRmB,YAAY,IALd,E,qDASA,WACC,IAAD,OACCI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAQ,EAAKT,SAAS,CAAClB,OAAQ2B,S,oBASrC,WAAS,IAAD,OAEDC,EAAgBC,KAAKP,MAAMtB,OAAO8B,QAAO,SAAAC,GAE/C,OAAOA,EAAMlC,KAAKmC,cAAcC,SAAS,EAAKX,MAAMH,YAAYa,kBAGjE,OAA8B,IAA3BH,KAAKP,MAAMtB,OAAOkC,OAEb,yCAKN,sBAAKzC,UAAW,KAAhB,UACA,8CACA,cAAC,EAAD,CAAWY,aAAewB,KAAKb,iBAC/B,cAAC,EAAD,UACA,cAAC,EAAD,CAAUhB,OAAQ4B,a,GA3CJO,aCIHC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCIdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c249c831.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card= (props)=>{\r\n\treturn(\r\n\t\t<div className ='tc bg-light-blue dib pa3 ma3 grow bw2 shadow-5'>\r\n\t\t\t<img alt= 'robotPic' src={`https://robohash.org/${props.id}.png`}/>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h2> {props.name}</h2>\r\n\t\t\t\t\t<p>{props.email}</p>\r\n\t\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t);\r\n} \r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card'; \r\n\r\n\r\nconst CardList=({robots})=>{\r\n\treturn(\r\n\t\t<div>\r\n\t\t{\r\n\t\t\trobots.map((user,i)=>\r\n\t\t\t{\r\n\t\t\t\treturn(\r\n\t\t\t \t\t<Card \r\n\t\t\t \t\tid={robots[i].id} \r\n\t\t\t \t\tname= {robots[i].name} \r\n\t\t\t \t\temail= {robots[i].email}\r\n\t\t\t \t\t/>);\r\n\t     \t})\r\n\t\t}\r\n\t    </div>\r\n\t\t);\r\n\t}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\n\r\nconst SearchBox =({searchChange})=>{\r\n\treturn(\r\n\t\t<div className='pa2'>\r\n\t\t\t<input className='pa3 ba b--green bg-lightest-blue'\r\n\t\t\ttype='search' \r\n\t\t\tplaceholder='Search Robots'\r\n\t\t\tonChange={searchChange}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n export default SearchBox;","import React from 'react';\r\n\r\nconst Scroll= (props)=>{\r\n\treturn(\r\n\t<div style= {{overflowY:'scroll', border: '1px solid black', height:'490px'}}>\r\n\t  {props.children}\r\n\t </div>\r\n\t );\r\n};\r\n\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\nimport CardList from '../components/CardList';\r\n//import {robots} from './robots';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\n\r\n\r\n\r\nclass App extends Component\r\n{ \r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t\tthis.state=\r\n\t\t{\r\n\t\t\trobots: [],\r\n\t\t\tsearchfield:''\r\n\t\t}\r\n\t}\r\n\t\r\n\tcomponentDidMount()\r\n\t{\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t.then(response=> response.json())\r\n\t\t.then(users=>{this.setState({robots: users})});\r\n\t\t\r\n\t}\r\n\r\n\tonSearchChange= (event)=>\r\n\t{\r\n\t\tthis.setState({searchfield:event.target.value});\r\n\t}\r\n\r\n \trender(){\r\n\r\n \t\tconst filteredRobots= this.state.robots.filter(robot => {\r\n\r\n\t\t\treturn robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\r\n\t\t})\r\n\r\n\t\tif(this.state.robots.length===0)\r\n\t\t{\r\n\t\t\treturn(<h1>Loading</h1>)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn(\r\n\t\t\t\t<div className= 'tc'>\r\n\t\t\t\t<h1> RoboFriends</h1>\r\n\t\t\t\t<SearchBox searchChange= {this.onSearchChange}/>\r\n\t\t\t\t<Scroll>\r\n\t\t\t\t<CardList robots={filteredRobots}/>\r\n\t\t\t\t</Scroll>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\nimport 'tachyons';\n//import Card from './Card';\nimport App from './containers/App'\nimport './containers/App.css'\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n   <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}